name: release

on:
  push:
    branches:
      - master

jobs:
  # Create release PR
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: lexactivator-js
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false}]'

  # Get latest LexActivator
  lexactivator-latest:
    uses: cryptlex/action-workflows/.github/workflows/lexactivator-latest-version.yml@main
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}

  # Update scripts to use latest LexActivator version
  update-scripts:
    runs-on: ubuntu-latest
    needs: [release-please, lexactivator-latest]
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - uses: actions/checkout@v3
      - name: Update Library Version
        run: |
          sed -i '/VERSION=/!b;cVERSION=\"v${{ needs.lexactivator-latest.outputs.version }}";' scripts/*.sh
          sed -i '/lexactivator_version =/!b;c$lexactivator_version ="v${{ needs.lexactivator-latest.outputs.version }}"' scripts/*.ps1

  # Link LexActivator static libs to Node
  build-addons:
    needs: [release-please, lexactivator-latest, update-scripts]
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2019]
    steps:
      - uses: actions/checkout@v3
      - run: git pull origin master --ff-only

      - uses: actions/setup-node@v3
        with:
          node-version: 12

      - name: Build for Windows
        if: matrix.os == 'windows-2019'
        shell: powershell
        run: |
          npm i -g node-gyp@8
          .\scripts\build-windows.ps1

      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: |
          npm i -g node-gyp@8
          ./scripts/build-macos.sh

      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker run -t -v $PWD:$PWD -w $PWD cryptlex/gcc-4.9:1 ./scripts/build-linux.sh
          docker run -t -v $PWD:$PWD -w $PWD cryptlex/gcc-4.9-arm:1 ./scripts/build-linux-arm.sh
          docker run -t -v $PWD:$PWD -w $PWD cryptlex/alpine-builder:2 ./scripts/build-linux-musl.sh

      - name: 'Upload artifacts'
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            ./lib/bindings/linux/**/**/*.node
            ./lib/bindings/macos/**/*.node
            ./lib/bindings/windows/**/*.node
            ./lib/bindings/windows/**/*.dll
          retention-days: 1

  # Publish to NPM
  publish-npm:
    needs: [release-please, lexactivator-latest, update-scripts, build-addons]
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: git pull origin master --ff-only

      - name: 'Download artifacts'
        uses: actions/download-artifact@v2
        with:
          path: ./lib/bindings
          name: artifacts

      - name: 'Build library'
        run: |
          npm ci
          npm run build

      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}